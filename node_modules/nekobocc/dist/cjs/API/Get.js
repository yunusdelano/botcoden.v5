"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = void 0;
const axios_1 = __importDefault(require("axios"));
const cheerio_1 = require("cheerio");
const shared_js_1 = require("../util/shared.js");
/**
 * Get metadata of episode or hentai page from a valid URL.
 *
 * @param {string} url - Nekopoi episode or hentai page URL.
 * @returns {Promise<HentaiMetadata | EpisodeMetadata>} Object of episode or hentai metadata.
 */
const get = async (url) => {
    const res = await axios_1.default.get(url, shared_js_1.header);
    const $ = (0, cheerio_1.load)(res.data);
    if (url.includes('/hentai/')) {
        const img = $('div.imgdesc').find('img').attr('src');
        const title = $('title').text();
        const synopsis = $('span.desc').find('p').text();
        const views = Number($('div.tabs.tab2').last().text().split(' ')[0]);
        let episode;
        $('div.episodelist').each((_i, e) => {
            episode = $(e).find('li').length;
        });
        const array = [];
        $('div.listinfo li').each((_i, e) => {
            array.push({ text: $(e).text() });
        });
        const result = {
            img: img,
            title: title,
            synopsis: synopsis,
            views: views,
            japanese: array[0].text.split(' ')[1],
            category: array[1].text.split(' ')[1],
            episode: episode,
            status: array[3].text.split(' ')[1],
            aired: array[4].text.replace('Tayang: ', ''),
            producer: array[5].text.replace('Produser: ', ''),
            genre: array[6].text.replace('Genres: ', ''),
            duration: array[7].text.replace('Durasi: ', ''),
            score: Number(array[8].text.replace('Skor: ', ''))
        };
        return result;
    }
    else {
        const img = $('div.thm').find('img').attr('src');
        const title = $('title').text();
        let quality;
        let download;
        const array = [];
        $('div.liner').each((_i, e) => {
            quality.push($(e).find('div.name').text());
            download.push($(e).find('a').attr('href'));
        });
        $('div.konten p').each((_i, e) => {
            array.push({ text: $(e).text() });
        });
        const result = {
            img: img,
            title: title,
            synopsis: array[1].text,
            genre: array[2].text.replace('Genre : ', ''),
            producer: array[4].text.replace('Producers : ', ''),
            duration: array[5].text.replace('Duration : ', ''),
            quality: quality,
            download: download
        };
        return result;
    }
};
exports.get = get;
//# sourceMappingURL=Get.js.map